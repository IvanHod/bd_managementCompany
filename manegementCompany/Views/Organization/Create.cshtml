@using web.Models;
@model Organization

@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<h2>Создание организации</h2>

@using(Html.BeginForm()) 
{
<div class="row form-group">
	<div class="col-md-2">
		<label>Полное наименование: </label>
	</div>
	<div class="col-md-10">
		@Html.EditorFor(model => model.fullName, new { htmlAttributes = new { @class = "form-control" } })
		@Html.ValidationMessageFor(model => model.fullName)
	</div>
</div>
<div class="row form-group">
	<div class="col-md-2">
		<label>Сокращенное наименование: </label>
	</div>
	<div class="col-md-10">
		@Html.EditorFor(model => model.name, new { htmlAttributes = new { @class = "form-control" } })
		@Html.ValidationMessageFor(model => model.name)
	</div>
</div>
<div class="row form-group">
	<div class="col-md-2">
		<label>Телефоны:</label>
	</div>
	<div class="col-md-10">
		@Html.EditorFor(model => model.phone, new { htmlAttributes = new { @class = "form-control" } })
		@Html.ValidationMessageFor(model => model.phone)
	</div>
</div>
<div class="row form-group">
	<div class="col-md-2">
		<label>E-mail:</label>
	</div>
	<div class="col-md-4">
		@Html.EditorFor(model => model.email, new { htmlAttributes = new { @class = "form-control" } })
		@Html.ValidationMessageFor(model => model.email)
	</div>
	<div class="col-md-2">
		<label>Пароль:</label>
	</div>
	<div class="col-md-4">
		@Html.PasswordFor(model => model.password, new {@class="form-control"})
		@Html.ValidationMessageFor(model => model.password)
	</div>
</div>
<div class="row form-group">
	<div class="col-md-6">
		<h3>Юридический адрес: </h3>
		<div class="row">
			<div class="col-md-4">
				<label>Выберете район: </label>
			</div>
			<div class="col-md-8 form-group">
				<select id="legalRegion" class="select2 form-control Region"></select>
				<input type="hidden" name="legalAddress[region]" />
			</div>
		</div>
		<div class="row">
			<div class="col-md-4">
				<label>Выберете город: </label>
			</div>
			<div class="col-md-8 form-group">
				<select id="legalCity" class="select2 form-control City"></select>
				<input type="hidden" name="legalAddress[city]" />
			</div>
		</div>
		<div class="row">
			<div class="col-md-4">
				<label>Выберете улицу: </label>
			</div>
			<div class="col-md-8 form-group">
				<select id="legalStreet" class="select2 form-control Street"></select>
				<input type="hidden" name="legalAddress[street]" />
			</div>
		</div>
		<div class="row">
			<div class="col-md-4">
				<label>Введите дом: </label>
			</div>
			<div class="col-md-8 form-group">
				<input name="legalAddress[house]" class="form-control House">
			</div>
		</div>
	</div>
	<div class="col-md-6">
		<h3>Физический адрес: </h3>
		<div class="row">
			<div class="col-md-4">
				<label>Выберете район: </label>
			</div>
			<div class="col-md-8 form-group">
				<select id="region" class="select2 form-control Region"></select>
				<input type="hidden" name="address[region]" />
			</div>
		</div>
		<div class="row">
			<div class="col-md-4">
				<label>Выберете город: </label>
			</div>
			<div class="col-md-8 form-group">
				<select id="city" class="select2 form-control City"></select>
				<input type="hidden" name="address[city]" />
			</div>
		</div>
		<div class="row">
			<div class="col-md-4">
				<label>Выберете улицу: </label>
			</div>
			<div class="col-md-8 form-group">
				<select id="street" class="select2 form-control Street"></select>
				<input type="hidden" name="address[street]" />
			</div>
		</div>
		<div class="row">
			<div class="col-md-4">
				<label>Выберете дом: </label>
			</div>
			<div class="col-md-8 form-group">
				<input name="address[house]" class="form-control House">
			</div>
		</div>
	</div>
</div>
<div class="row form-group">
	<div class="col-md-2">
		<label>ИНН:</label>
	</div>
	<div class="col-md-4">
		@Html.EditorFor(model => model.INN, new { htmlAttributes = new { @class = "form-control" } })
		@Html.ValidationMessageFor(model => model.INN)
	</div>
	<div class="col-md-2">
		<label>КПП:</label>
	</div>
	<div class="col-md-4">
		@Html.PasswordFor(model => model.KPP, new {@class="form-control"})
		@Html.ValidationMessageFor(model => model.KPP)
	</div>
</div>
<div class="row form-group">
	<div class="col-md-2">
		<label>ОГРН:</label>
	</div>
	<div class="col-md-4">
		@Html.EditorFor(model => model.OGRN, new { htmlAttributes = new { @class = "form-control" } })
		@Html.ValidationMessageFor(model => model.INN)
	</div>
	<div class="col-md-2">
		<label>ОКТМО:</label>
	</div>
	<div class="col-md-4">
		@Html.PasswordFor(model => model.OKTMO, new {@class="form-control"})
		@Html.ValidationMessageFor(model => model.OKTMO)
	</div>
</div>
<div class="row form-group">
	<div class="col-md-12 text-right">
		<div class="btn-group">
			<input type="button" class="btn btn-danger" value="Отменить" />
			<input type="submit" class="btn btn-success" value="Сохранить" />
		</div>
	</div>
</div>
}


<script>
var regions = [],
	legalCities = [],
	cities = [],
	legalStreets = [],
	streets = [];

	var _find = function(mass, callback) {
		result = null;
		mass.forEach(function(item) {
			if( callback(item) ) {
				result = item
			}
		})
		return result;
	}

	$(".select2").select2({tags: true});

    var elements = ['Region', 'City', 'Street', 'House']

	$.ajax({ url: '/Region/Select', type: 'GET'}).done(function(res){
		regions = res;
		$('.Region').select2({data: res, tags: true}).trigger("change");
	});

	$('#legalRegion').change(function() {
		var val = $(this).val(),
			el = this;
		if(!val) return;
		if( _find(regions, function(item) { return item.id == val } ) ) {
			$('[name="legalAddress[region]"]').val( $('#select2-legalRegion-container').text() );
			$.ajax({ url: '/City/Select', type: 'GET', data: {parent: val} })
			.done(function(res){
				legalCities = res;
				$('#legalCity').empty().select2({data: res, tags: true}).trigger("change");
			});
		} else {
			$.ajax({ url: '/Region/Create', type: 'POST', data: { name: val, city: '' } })
				.done(function(res) {
					regions.push(res);
					$('#region').empty().select2({data: regions, tags: true})
						.val(res.id).trigger("change");
					setTimeout(function() {
						$('[name="legalAddress[region]"]').val( $('#select2-legalRegion-container').text() );
					}, 400);
				});
		}
	})

	$('#region').change(function() {
		var val = $(this).val(),
			el = this;
		if(!val) return;
		if( _find(regions, function(item) { return item.id == val } ) ) {
			$('[name="address[region]"]').val( $('#select2-region-container').text() );
			$.ajax({ url: '/City/Select', type: 'GET', data: {parent: val} })
			.done(function(res){
				cities = res;
				$('#city').empty().select2({data: res, tags: true}).trigger("change");
			});
		} else {
			$.ajax({ url: '/Region/Create', type: 'POST', data: { name: val, city: '' } })
				.done(function(res) {
					regions.push(res);
					$('#region').empty().select2({data: regions, tags: true})
						.val(res.id).trigger("change");
					setTimeout(function() {
						$('[name="address[region]"]').val( $('#select2-region-container').text() );
					}, 400);
				});
		}
	})

	$('#legalCity').change(function() {
		var val = $(this).val(),
			parent = $('#legalRegion').val(),
			el = this;
		if(!val) {
			streets = [];
			$('#legalStreet').empty().trigger('change');
			return;
		}
		if( _find(legalCities, function(item) { return item.id == val } ) ) {
			$('[name="legalAddress[city]"]').val( $('#select2-legalCity-container').text() );
			$.ajax({ url: '/Street/Select', type: 'GET', data: {parent: val} })
				.done(function(res){
					legalStreets = res;
					$('#legalStreet').empty().select2({data: res, tags: true}).trigger("change");
				});
		} else {
			$.ajax({ url: '/City/Create', type: 'POST', data: { parent: parent, name: val, street: '' } })
				.done(function(res) {
					legalCities.push(res);
					$('#legalCity').empty().select2({data: cities, tags: true})
						.val(res.id).trigger("change");
					setTimeout(function() {
						$('[name="legalAddress[city]"]').val( $('#select2-legalCity-container').text() );
					}, 400);
				});
		}
	});

	$('#city').change(function() {
		var val = $(this).val(),
			parent = $('#region').val(),
			el = this;
		if(!val) {
			streets = [];
			$('#street').empty().trigger('change');
			return;
		}
		if( _find(cities, function(item) { return item.id == val } ) ) {
			$('[name="address[city]"]').val( $('#select2-city-container').text() );
			$.ajax({ url: '/Street/Select', type: 'GET', data: {parent: val} })
				.done(function(res){
					streets = res;
					$('#street').empty().select2({data: res, tags: true}).trigger("change");
				});
		} else {
			$.ajax({ url: '/City/Create', type: 'POST', data: { parent: parent, name: val, street: '' } })
				.done(function(res) {
					cities.push(res);
					$('#city').empty().select2({data: cities, tags: true})
						.val(res.id).trigger("change");
					setTimeout(function() {
						$('[name="address[city]"]').val( $('#select2-city-container').text() );
					}, 400);
				});
		}
	});

	$('#legalStreet').change(function() {
		var val = $(this).val(),
			parent = $('#legalCity').val(),
			el = this;
		if(!val) return;
		if( !_find(legalStreets, function(item) { return item.id == val } ) ) {
			$.ajax({ url: '/Street/Create', type: 'POST', data: { parent: parent, name: val, house: '' } })
				.done(function(res) {
					legalStreets.push(res);
					$('#legalstreet').empty().select2({data: streets, tags: true})
						.val(res.id).trigger("change");
					setTimeout(function() {
						$('[name="legalAddress[street]"]').val( $('#select2-legalStreet-container').text() );
					}, 400);
				});
		} else
			$('[name="legalAddress[street]"]').val( $('#select2-legalStreet-container').text() );
	})

$('#street').change(function() {
	var val = $(this).val(),
		parent = $('#city').val(),
		el = this;
	if(!val) return;
	if( !_find(streets, function(item) { return item.id == val } ) ) {
		$.ajax({ url: '/Street/Create', type: 'POST', data: { parent: parent, name: val, house: '' } })
			.done(function(res) {
				streets.push(res);
				$('#street').empty().select2({data: streets, tags: true})
					.val(res.id).trigger("change");
				setTimeout(function() {
					$('[name="address[street]"]').val( $('#select2-street-container').text() );
				}, 400);
			});
	} else
		$('[name="address[street]"]').val( $('#select2-street-container').text() );
})

	function setActionTab() {
		$('nav li').removeClass('active');
		$('#organization').addClass("active");
	}
</script>
